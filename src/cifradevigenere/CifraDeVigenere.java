package cifradevigenere;
import javax.swing.JOptionPane;
/**
 * Classe principal que implementa a interface gráfica para a Cifra de Vigenère.
 * Permite ao usuário inserir mensagem, chave e selecionar a operação desejada.
 * 
 * @author Jorge Paulo Santos
 */
public class CifraDeVigenere extends javax.swing.JFrame {
    private ControladorVigenere controlador;
    private String mensagem, chave;
    private boolean operacaoCriptografia;
    
    /**
     * Construtor que inicializa os componentes da interface gráfica.
     */
    public CifraDeVigenere() {
        initComponents();
        configurarAparencia();
    }
    
    /**
     * Configura propriedades visuais adicionais da interface.
     */
    private void configurarAparencia() {
        this.setLocationRelativeTo(null); // Centraliza a janela
        saida.setContentType("text/html"); // Permite formatação básica no output
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        lblTitulo = new javax.swing.JLabel();
        lblMensagem = new javax.swing.JLabel();
        entradaMensagem = new javax.swing.JTextField();
        lblChave = new javax.swing.JLabel();
        EntradaChave = new javax.swing.JTextField();
        lblCriptOuDescript = new javax.swing.JLabel();
        comboCriptDescript = new javax.swing.JComboBox<>();
        btnExecutar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        saida = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));

        lblTitulo.setFont(new java.awt.Font("ELEGANT TYPEWRITER", 1, 24)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Cifra de Vigenere");

        lblMensagem.setFont(new java.awt.Font("Z003", 0, 20)); // NOI18N
        lblMensagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMensagem.setText("Mensagem");

        entradaMensagem.setFont(new java.awt.Font("Hack", 0, 15)); // NOI18N
        entradaMensagem.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        entradaMensagem.setFocusCycleRoot(true);
        entradaMensagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entradaMensagemActionPerformed(evt);
            }
        });

        lblChave.setFont(new java.awt.Font("Z003", 0, 20)); // NOI18N
        lblChave.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblChave.setText("Chave");

        EntradaChave.setFont(new java.awt.Font("Hack", 0, 15)); // NOI18N
        EntradaChave.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lblCriptOuDescript.setFont(new java.awt.Font("Z003", 0, 20)); // NOI18N
        lblCriptOuDescript.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        comboCriptDescript.setFont(new java.awt.Font("Z003", 0, 20)); // NOI18N
        comboCriptDescript.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Criptografar", "Descriptografar" }));
        comboCriptDescript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCriptDescriptActionPerformed(evt);
            }
        });

        btnExecutar.setFont(new java.awt.Font("JMH Typewriter", 0, 15)); // NOI18N
        btnExecutar.setText("Executar");
        btnExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecutarActionPerformed(evt);
            }
        });

        saida.setBorder(null);
        saida.setFont(new java.awt.Font("DEC Terminal Modern", 0, 18)); // NOI18N
        saida.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(saida);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnExecutar)
                        .addGap(18, 18, 18)
                        .addComponent(comboCriptDescript, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(entradaMensagem)
                        .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                        .addComponent(lblMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblChave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EntradaChave)
                        .addComponent(lblCriptOuDescript, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblTitulo)
                .addGap(18, 18, 18)
                .addComponent(lblMensagem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entradaMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblChave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EntradaChave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblCriptOuDescript, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboCriptDescript, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void entradaMensagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entradaMensagemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entradaMensagemActionPerformed

    /**
     * Manipula o evento de clique no botão Executar.
     */
    private void btnExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecutarActionPerformed
        coletarDadosEntrada();
        
        if(validarEntradasGUI()) {
            try {
                configurarOperacao();
                executarProcessamento();
                atualizarInterfaceResultado();
            } catch (IllegalArgumentException e) {
                exibirErro("Entrada inválida", e.getMessage());
            } catch (Exception e) {
                exibirErro("Erro inesperado", e.getMessage());
            }
        }
    }//GEN-LAST:event_btnExecutarActionPerformed

    /**
     * Coleta dados dos campos de entrada.
     */
    private void coletarDadosEntrada() {
        mensagem = entradaMensagem.getText().trim();
        chave = EntradaChave.getText().trim();
    }
    
    /**
     * Valida os dados na camada de interface.
     * @return true se as entradas forem válidas
     */
    private boolean validarEntradasGUI() {
        if(mensagem.isEmpty()) {
            exibirErro("Campo obrigatório", "A mensagem não pode estar vazia!");
            return false;
        }
        if(chave.isEmpty()) {
            exibirErro("Campo obrigatório", "A chave não pode estar vazia!");
            return false;
        }
        return true;
    }
    
    /**
     * Configura o tipo de operação baseado na seleção do usuário.
     */
    private void configurarOperacao() {
        operacaoCriptografia = (comboCriptDescript.getSelectedIndex() == 0);
        lblCriptOuDescript.setText(operacaoCriptografia ? "Criptografado" : "Descriptografado");
    }

    /**
     * Executa o processamento principal através do controlador.
     */
    private void executarProcessamento() {
        controlador = new ControladorVigenere(mensagem, chave, operacaoCriptografia);
        String resultado = controlador.cifraVigenere();
        saida.setText("<b>Resultado:</b> " + resultado); // Formatação HTML simples
    }

    /**
     * Atualiza elementos visuais após o processamento.
     */
    private void atualizarInterfaceResultado() {
        entradaMensagem.setText("");
        EntradaChave.setText("");
        entradaMensagem.requestFocus();
    }

    /**
     * Exibe mensagens de erro formatadas.
     * @param titulo Título da janela de erro
     * @param mensagem Conteúdo da mensagem
     */
    private void exibirErro(String titulo, String mensagem) {
        JOptionPane.showMessageDialog(
            this, 
            "<html><div style='width: 200px;'>" + mensagem + "</div></html>",
            titulo,
            JOptionPane.ERROR_MESSAGE
        );
    }


    private void comboCriptDescriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCriptDescriptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCriptDescriptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CifraDeVigenere.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CifraDeVigenere().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EntradaChave;
    private javax.swing.JButton btnExecutar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JComboBox<String> comboCriptDescript;
    private javax.swing.JTextField entradaMensagem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblChave;
    private javax.swing.JLabel lblCriptOuDescript;
    private javax.swing.JLabel lblMensagem;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextPane saida;
    // End of variables declaration//GEN-END:variables
}
